     1                                  org 0x7C00
     2                                  bits 16
     3                                  
     4                                  ;setup stack
     5                                  entry:
     6 00000000 B80000                      mov ax,0
     7 00000003 8ED8                        mov ds,ax
     8 00000005 8EC0                        mov es,ax
     9 00000007 8ED0                        mov ss,ax
    10 00000009 BC007C                      mov sp,7C00h
    11                                  
    12                                     ;Step 1: disable interrupts 
    13 0000000C FA                         cli
    14                                     ;Step 2: Enable A20 gate
    15 0000000D E81D00                     call EnableA20
    16                                     ;Step 3 Load GDT
    17 00000010 E85100                     call LoadGDT
    18                                     ;Step 4: switch to protected mode
    19 00000013 0F20C0                     mov eax,cr0
    20 00000016 0C01                       or al,1
    21 00000018 0F22C0                     mov cr0,eax
    22                                  
    23                                     ;Step 5: Far jump to protected mode
    24 0000001B 66EA[23000000]0800         jmp dword 08h:.pmode
    25                                  
    26                                  
    27                                  .pmode:
    28                                      [bits 32]
    29                                      ;step 6: setup segment registers
    30 00000023 66B81000                    mov ax, 0x10
    31 00000027 8ED8                        mov ds,ax
    32 00000029 8ED0                        mov ss,ax
    33                                  
    34 0000002B FA                          cli
    35 0000002C F4                          hlt
    36                                  
    37                                  
    38                                  
    39                                  EnableA20:
    40                                      [bits 16]
    41                                      ;disable keyboard
    42 0000002D E83A00                      call A20WaitInput
    43 00000030 B0AD                        mov al,kbdControllerDisableKeyboard
    44 00000032 E664                        out kbdControllerCommandPort, al
    45                                  
    46                                      ;read control output port
    47 00000034 E83300                      call A20WaitInput
    48 00000037 B0D0                        mov al, kbdControllerReadCtrlOutputPort
    49 00000039 E664                        out kbdControllerCommandPort,al
    50                                  
    51 0000003B E83300                      call A20WaitOutput
    52 0000003E E460                        in al,kbdControllerDataPort
    53 00000040 6650                        push eax
    54                                  
    55                                      ;write control output port
    56 00000042 E82500                      call A20WaitInput
    57 00000045 B0D1                        mov al,kbdControllerWriteCtrlOutputPort
    58 00000047 E664                        out kbdControllerCommandPort,al
    59                                  
    60 00000049 E81E00                      call A20WaitInput
    61 0000004C B0D1                        mov al, kbdControllerWriteCtrlOutputPort
    62 0000004E E664                        out kbdControllerCommandPort,al
    63                                  
    64 00000050 E81700                      call A20WaitInput
    65 00000053 6658                        pop eax
    66 00000055 0C02                        or al,2
    67 00000057 E660                        out kbdControllerDataPort, al
    68                                  
    69                                      ;enable keyboard
    70 00000059 E80E00                      call A20WaitInput
    71 0000005C B0AE                        mov al,kbdControllerEnableKeyboard
    72 0000005E E664                        out kbdControllerCommandPort,al
    73                                  
    74 00000060 E80700                      call A20WaitInput
    75 00000063 C3                          ret
    76                                  
    77                                  
    78                                  LoadGDT:
    79                                      [bits 16]
    80 00000064 0F0116[A000]                lgdt [g_GDTDesc]
    81 00000069 C3                          ret
    82                                  
    83                                  
    84                                  
    85                                  A20WaitInput:
    86                                      [bits 16]
    87                                      ;wait until status bit 2(input buffer) is 0 
    88 0000006A E464                        in al,kbdControllerCommandPort
    89 0000006C A802                        test al,2
    90 0000006E 75FA                        jnz A20WaitInput
    91 00000070 C3                          ret 
    92                                  
    93                                  A20WaitOutput:
    94                                      [bits 16]
    95                                      ;wait until status bit 1(output buffer) is 1 so it can be read
    96 00000071 E464                        in al,kbdControllerCommandPort
    97 00000073 A801                        test al,1
    98 00000075 74FA                        jz A20WaitOutput
    99 00000077 C3                          ret
   100                                  
   101                                  
   102                                  
   103                                  
   104                                  
   105                                  kbdControllerDataPort                   equ 0x60
   106                                  kbdControllerCommandPort                equ 0x64
   107                                  kbdControllerDisableKeyboard            equ 0xAD
   108                                  kbdControllerEnableKeyboard             equ 0xAE
   109                                  kbdControllerReadCtrlOutputPort         equ 0xD0
   110                                  kbdControllerWriteCtrlOutputPort        equ 0xD1
   111                                  
   112                                  
   113                                  g_GDT:
   114                                      ;NULL Descriptor
   115 00000078 0000000000000000            dq 0
   116                                      ;32-bit code segment
   117 00000080 FFFF                        dw 0FFFFh           ;limit(bit 0-15) = 0xFFFFF for full 32-bit range
   118 00000082 0000                        dw 0                ;base(bits 0-15) = 0x0
   119 00000084 00                          db 0                ; base(bits 16-23)
   120 00000085 9A                          db 10011010b        ;access(present,ring 0,code segment,executable,direction 0,readable)
   121 00000086 CF                          db 11001111b       ;granularity(4k pages, 32-protected mode) + limit(bits 16-19)
   122 00000087 00                          db 0               ; base high 
   123                                  
   124                                      ; 32-bit data segment
   125 00000088 FFFF                        dw 0FFFFh                   ; limit (bits 0-15) = 0xFFFFF for full 32-bit range
   126 0000008A 0000                        dw 0                        ; base (bits 0-15) = 0x0
   127 0000008C 00                          db 0                        ; base (bits 16-23)
   128 0000008D 92                          db 10010010b                ; access (present, ring 0, data segment, executable, direction 0, writable)
   129 0000008E CF                          db 11001111b                ; granularity (4k pages, 32-bit pmode) + limit (bits 16-19)
   130 0000008F 00                          db 0                        ; base high
   131                                  
   132                                      ; 16-bit code segment
   133 00000090 FFFF                        dw 0FFFFh                   ; limit (bits 0-15) = 0xFFFFF
   134 00000092 0000                        dw 0                        ; base (bits 0-15) = 0x0
   135 00000094 00                          db 0                        ; base (bits 16-23)
   136 00000095 9A                          db 10011010b                ; access (present, ring 0, code segment, executable, direction 0, readable)
   137 00000096 0F                          db 00001111b                ; granularity (1b pages, 16-bit pmode) + limit (bits 16-19)
   138 00000097 00                          db 0                        ; base high
   139                                  
   140                                      ; 16-bit data segment
   141 00000098 FFFF                        dw 0FFFFh                   ; limit (bits 0-15) = 0xFFFFF
   142 0000009A 0000                        dw 0                        ; base (bits 0-15) = 0x0
   143 0000009C 00                          db 0                        ; base (bits 16-23)
   144 0000009D 92                          db 10010010b                ; access (present, ring 0, data segment, executable, direction 0, writable)
   145 0000009E 0F                          db 00001111b                ; granularity (1b pages, 16-bit pmode) + limit (bits 16-19)
   146 0000009F 00                          db 0                        ; base high
   147                                  
   148                                  
   149 000000A0 2700                    g_GDTDesc: dw g_GDTDesc - g_GDT - 1     ;limit = size of GDT
   150 000000A2 [78000000]                         dd g_GDT
   151                                  
   152                                  
   153                                  .halt:
   154 000000A6 EBFE                        jmp .halt
   155                                  
   156 000000A8 00<rep 156h>            times 510-($-$$) db 0
   157 000001FE 55AA                    dw 0AA55h
